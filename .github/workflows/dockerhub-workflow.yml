name: "Build and Push to Docker Hub"
on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CACHE_NUMBER: 1  # increase to reset cache manually
  IMAGE_NAME: todolist-app

jobs:
  build-and-push:
    runs-on: ubuntu-22.04
    steps:
      - name: Clean unnecessary files to save space
        run: |
          docker rmi $(docker images -q)
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo apt -y autoremove --purge
          sudo apt -y autoclean
          sudo apt clean
          rm --recursive --force "$AGENT_TOOLSDIRECTORY"
          df -h
          
      - name: Checkout
        uses: actions/checkout@v2
           
      - name: Login to Docker Hub
        id: login-dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
          
      - name: Get a docker image tag for DockerHub
        env:
          REGISTRY: ${{ steps.login-dockerhub.outputs.registry }}
          REPOSITORY: todolist-app
          IMAGE_TAG: latest
        run: |
            echo "docker_image=$REGISTRY/$REPOSITORY" > $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.docker_image }}
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=ref,event=pr
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Build, Tag, and Push The Docker Image to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./TodoApp2/Dockerfile
          push: true
          tags: ${{ env.docker_image }}:latest
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ secrets.AWS_REGION }}
    
